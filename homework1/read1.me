•	Что такое git и чем он отличается от GitHub?
git – одна из СКВ(систем контроля версий)- хранит файлы, скрывая предыдущие версии и записки с изменениями, сделанными с исходной версией, GitHub – сервер для удалённого репозитория(вэб-хостинг) – для нецентрализованного СКВ позволяет изменять файлы в локальном репозитории, а потом синхронизироваться и добавлять версии на удалённый репозиторий на GitHub.
•	Зачем использовать git и подобные ему системы в больших проектах?
git позволяет увидеть историю версий и в случае с получением нового не рабочего файла вернуться к последней рабочей версии, также в случае с нецентрализованной СКВ позволяет редактировать и «дебажить» код в локальных репозиториях.
•	Какие основные термины используются при работе с git?
clone – создание копии удалённого репозитория на своём устройстве
commit – сохранение изменений (отсюда термин история коммитов)
pull – подгрузить с удалённого на локальный
push – с локального на удалённый ( в четыре шага – пул, решить ошибки, коммит, пуш)
•	В каких случаях имеет смысл создавать различные ветки проекта?
git позволяет увидеть историю версий и в случае с получением нового не рабочего файла вернуться к последней рабочей версии, ветка создаётся сразу после версии требующей изменения, на ней отражаются предложенные изменения, в случае рабочей программы новая ветка сливается с основной, в противном случае удаляется, ничего не портя.
•	В чем отличия merge и rebase? В чем преимущества и недостатки последнего из них?
При создании параллельных веток может возникнуть конфликт в случае слияния. Он решается двумя способами merge – слияние предварительное веток, чтобы потом слить с основной, rebase – слияние версий с одной ветки с основной, потом от основной к другой и снова слияние с основной. Слияние сохраняет историю в первозданном виде, а перебазирование ее перезаписывает. Поэтому rebase может привести к потере данных. При повторном выполнении новых коммитов старые удаляются. Однако, это позволяет очистить историю разработки, прежде чем сделать ее общедоступной. А с помощью интерактивного перебазирования можно удалять ненужные коммиты, сжимать изменения или просто обновлять сообщения коммитов.
•	В чем отличия централизованных СКВ от децентрализованных?
В централизованных СКВ сервер в реальном времени контролирует актуальное состояние проекта, все изменения делаемые одним пользователем видны другому в реальном времени. Например, гугл-таблицы или гугл-документы.
В нецентрализованных СКВ сервер не контролирует всё, скачанный на локальный репозиторий код может не совпадать с находящейся версией на удалённом репозитории, возможно возникновение конфликта версий, ввиду возможных разных версий пользователя и на сервере при попытке сделать пул, наличие разных версий на различных локальных репозиториях.
